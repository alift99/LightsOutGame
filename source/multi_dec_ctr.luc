module multi_dec_ctr #(
    DIGITS = 2  // number of digits
  ) 
  (
    input clk,                // clock
    input rst,                // reset
    input inc,                // increment counter
    input reset_counter,      // custom reset input 
    output digits[DIGITS][4]  // digit values
  ) 
{
 .clk(clk), .rst(rst) 
  {
    decimal_counter dctr [DIGITS]; // digit counters
  }
 
  always 
  {
    dctr.inc[0] = inc;   // increment the first digit
    dctr.reset_counter[1:0] = 2x{reset_counter};
    
    digits = dctr.value; // output the values
 
    // if the previous digit overflows, increment the next
    dctr.inc[1] = dctr.ovf[0];
  }
}