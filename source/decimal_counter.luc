module decimal_counter (
    input clk,      // clock
    input rst,      // reset
    input inc,      // increment the counter
    input reset_counter, // reset the counter
    output ovf,     // counter overflowed
    output value[4] // current value
  ) {
 
  .clk(clk), .rst(rst) {
    dff val[4];     // value storage
  }
 
  always {
    if (reset_counter)
    {
      val.d = 0;
      value = val.q;
      ovf = 0;
    }
    else
    {
      value = val.q;           // output the value 
      ovf = val.q == 9 && inc; // if max value and incrementing, overflow!
    }
 
    if (inc) {               // should add 1
      if (val.q == 9)        // if max value
        val.d = 0;           // reset to 0
      else                   // otherwise
        val.d = val.q + 1;   // add one
    }    
  }
}