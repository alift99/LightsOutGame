/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module move_counter_7 (
    input clk,
    input rst,
    input inc,
    input reset_counter,
    input [3:0] difficulty,
    output reg [6:0] seg_out,
    output reg [3:0] sel_out
  );
  
  
  
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_11 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  
  wire [8-1:0] M_dec_ctr_digits;
  reg [1-1:0] M_dec_ctr_inc;
  reg [1-1:0] M_dec_ctr_reset_counter;
  multi_dec_ctr_12 dec_ctr (
    .clk(clk),
    .rst(rst),
    .inc(M_dec_ctr_inc),
    .reset_counter(M_dec_ctr_reset_counter),
    .digits(M_dec_ctr_digits)
  );
  
  always @* begin
    M_dec_ctr_inc = inc;
    M_dec_ctr_reset_counter = reset_counter;
    M_seg_values[0+3-:4] = M_dec_ctr_digits[4+3-:4];
    M_seg_values[4+3-:4] = M_dec_ctr_digits[0+3-:4];
    M_seg_values[8+3-:4] = 4'ha;
    M_seg_values[12+3-:4] = difficulty;
    seg_out = ~M_seg_seg;
    sel_out = ~M_seg_sel;
  end
endmodule
